Regular way of assigning class to element is using "class attribute".
<h2 class="text-success"> Are u free ? </h2>

To use "class binding" we need to declare property and assign to it a className.
public successClass = "text-success"
<h2 [class]="successClass"> yes I am free. </h2>

Using both Regular class attribute and Class binding for an element
<h2 class="text-special" [class]="successClass"> Using Both Regular and Class Binding, Both works </h2>



"Apply a class based on the expression" or property that evaluates to either true or false.
public hasError = true;
<h2 [class.text-danger]="hasError"> No I am busy. </h2>

.text-danger ==> name of the class that we want to conditionally apply to the element.
"hasError" ==> expression that evaluates to true or false.
so if hasError is true then text-danger class will be applied to element h2.
So we can toggle class based on true and false value.


To "conditionally apply multiple classes" using "ngClass" directive.
<h2 [ngClass]="messageClasses"> No I am busy. </h2>

public hasError = true;
public isSpecial = true;

public messageClasses = {
    "text-success":!this.hasError,
    "text-danger":this.hasError,
    "text-special":this.hasError
}


Allows you to dynamically add or remove classes on html elements based on certain user interactions and state of your application.
can change classes being applied by changing properties in your component class.